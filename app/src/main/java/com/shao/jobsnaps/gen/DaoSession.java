package com.shao.jobsnaps.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.shao.jobsnaps.pojo.Files;
import com.shao.jobsnaps.pojo.Join;
import com.shao.jobsnaps.pojo.Projects;
import com.shao.jobsnaps.pojo.Tags;
import com.shao.jobsnaps.pojo.Team;
import com.shao.jobsnaps.pojo.Users;

import com.shao.jobsnaps.gen.FilesDao;
import com.shao.jobsnaps.gen.JoinDao;
import com.shao.jobsnaps.gen.ProjectsDao;
import com.shao.jobsnaps.gen.TagsDao;
import com.shao.jobsnaps.gen.TeamDao;
import com.shao.jobsnaps.gen.UsersDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig filesDaoConfig;
    private final DaoConfig joinDaoConfig;
    private final DaoConfig projectsDaoConfig;
    private final DaoConfig tagsDaoConfig;
    private final DaoConfig teamDaoConfig;
    private final DaoConfig usersDaoConfig;

    private final FilesDao filesDao;
    private final JoinDao joinDao;
    private final ProjectsDao projectsDao;
    private final TagsDao tagsDao;
    private final TeamDao teamDao;
    private final UsersDao usersDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        filesDaoConfig = daoConfigMap.get(FilesDao.class).clone();
        filesDaoConfig.initIdentityScope(type);

        joinDaoConfig = daoConfigMap.get(JoinDao.class).clone();
        joinDaoConfig.initIdentityScope(type);

        projectsDaoConfig = daoConfigMap.get(ProjectsDao.class).clone();
        projectsDaoConfig.initIdentityScope(type);

        tagsDaoConfig = daoConfigMap.get(TagsDao.class).clone();
        tagsDaoConfig.initIdentityScope(type);

        teamDaoConfig = daoConfigMap.get(TeamDao.class).clone();
        teamDaoConfig.initIdentityScope(type);

        usersDaoConfig = daoConfigMap.get(UsersDao.class).clone();
        usersDaoConfig.initIdentityScope(type);

        filesDao = new FilesDao(filesDaoConfig, this);
        joinDao = new JoinDao(joinDaoConfig, this);
        projectsDao = new ProjectsDao(projectsDaoConfig, this);
        tagsDao = new TagsDao(tagsDaoConfig, this);
        teamDao = new TeamDao(teamDaoConfig, this);
        usersDao = new UsersDao(usersDaoConfig, this);

        registerDao(Files.class, filesDao);
        registerDao(Join.class, joinDao);
        registerDao(Projects.class, projectsDao);
        registerDao(Tags.class, tagsDao);
        registerDao(Team.class, teamDao);
        registerDao(Users.class, usersDao);
    }
    
    public void clear() {
        filesDaoConfig.clearIdentityScope();
        joinDaoConfig.clearIdentityScope();
        projectsDaoConfig.clearIdentityScope();
        tagsDaoConfig.clearIdentityScope();
        teamDaoConfig.clearIdentityScope();
        usersDaoConfig.clearIdentityScope();
    }

    public FilesDao getFilesDao() {
        return filesDao;
    }

    public JoinDao getJoinDao() {
        return joinDao;
    }

    public ProjectsDao getProjectsDao() {
        return projectsDao;
    }

    public TagsDao getTagsDao() {
        return tagsDao;
    }

    public TeamDao getTeamDao() {
        return teamDao;
    }

    public UsersDao getUsersDao() {
        return usersDao;
    }

}
